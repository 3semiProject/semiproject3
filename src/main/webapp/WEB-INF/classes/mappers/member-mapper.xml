<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

    <!-- select 한 결과집합 ResultSet 에서 한 행씩 꺼내서
    각 컬럼값들을 vo 객체의 각 필드에 저장 처리하는 작업
    : 결과 매핑
    리스트나 맵에 여러 객체를 저장 처리도 포함됨 -->
    <resultMap id="resultMember" type="Member">
        <id property="userid" column="userid"/>
        <result property="userpwd" column="userpwd"/>
        <result property="username" column="username"/>
        <result property="gender" column="gender"/>
        <result property="age" column="age"/>
        <result property="email" column="email"/>
        <result property="enroll_date" column="enroll_date"/>
        <result property="lastmodified" column="lastmodified"/>
        <result property="signtype" column="signtype"/>
        <result property="admin" column="admin"/>
        <result property="login_ok" column="login_ok"/>
    </resultMap>


    <select id="selectLogin" parameterType="Member" resultType="Member">
        select *
        from member
        where userid = #{userid}
          and userpwd = #{userpwd}
          and login_ok = 'Y'
    </select>

    <select id="selectMember" parameterType="string" resultType="Member">
        select *
        from member
        where userid = #{userid}
    </select>

    <select id="selectDupCheckId" parameterType="string" resultType="_int">
        select count(userid)
        from member
        where userid = #{userid}
    </select>

    <select id="selectList" resultMap="resultMember">
        select *
        from member
    </select>

    <select id="selectSearchUserid" parameterType="string" resultMap="resultMember">
        select *
        from member
        where USERID LIKE '%' || #{userid} || '%'
    </select>

    <select id="selectSearchGender" parameterType="string" resultMap="resultMember">
        select *
        from member
        where GENDER = #{gender}
    </select>

    <select id="selectSearchAge" parameterType="_int" resultMap="resultMember">
        select *
        from member

        <if test="value == 60">
           <![CDATA[where AGE>= #{value}]]>
        </if>
        <if test="value != 60">
            where AGE between #{value} and (#{value}+9)
        </if>

    </select>

    <select id="selectSearchEnrollDate" parameterType="SearchDate" resultMap="resultMember">
        select *
        from member
        where ENROLL_DATE between #{begin} and #{end}
    </select>

    <select id="selectSearchLoginOK" parameterType="string" resultMap="resultMember">
        select *
        from member
        where LOGIN_OK = #{login_ok}
    </select>

    <insert id="insertMember" parameterType="Member">
        insert into MEMBER
        values (#{userid},
                #{userpwd},
                #{username},
                #{gender},
                #{age},
                #{phone},
                #{email},
                default,
                default,
                default,
                default,
                default)
    </insert>

    <delete id="deleteMember" parameterType="string">
        delete
        from MEMBER
        where userid = #{userid}
    </delete>

    <update id="updateMember" parameterType="Member">
        update MEMBER
        set userpwd=#{userpwd},
            age= #{age},
            phone= #{phone},
            email= #{email},
            LASTMODIFIED= sysdate
        where userid = #{userid}
    </update>

    <update id="updateLoginok" parameterType="Member">
        update MEMBER
        set LOGIN_OK= #{login_ok}
        where USERID = #{userid}
    </update>
</mapper>
